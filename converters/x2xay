#!/usr/bin/perl

use strict;
use warnings;

use File::Basename qw(dirname);
use Getopt::Long
    qw(:config posix_default gnu_compat require_order bundling no_ignore_case);

sub usage;

my (%meta, %docid, $docid_src);
my $dx = 0;

GetOptions(
    'i|docid-source=s' => \$docid_src,
    't|title=s' => sub { $meta{'title'} = $_[1] },
    'm|meta=s' => sub {
        usage if $_[1] !~ /^([^=]+)=(.*)/;
        $meta{$1} = $2;
    },
) or usage;

if (defined $docid_src) {
    open my $fh, '<', $docid_src or die;
    while (<$fh>) {
        chomp;
        my ($id, $path) = split /\s+/, $_, 2;
        $docid{$path} = $id;
    }
}

print "!xpl 1.0 UTF-8\n";
print "### Generated by $0 ", scalar(localtime), "\n";

foreach my $f (@ARGV) {
    (my $ext = $f) =~ s/.+\.//;
    my $code = __PACKAGE__->can("from_$ext") // die;
    $code->($f);
}

sub from_html {
    my ($f) = @_;
    open my $fh, '-|', qw(links -dump), $f;
    my $docid = docid($f);
    print <<"EOS";
!xapian {
title <S>
date <D>
filetype  <T>
extension <E>
}
!doc \$$docid {
\@extension = html
\@filetype = text/html
EOS
    while (<$fh>) {
        chomp;
        print '*:', $_, "\n";
    }
    print "}\n";
}

sub from_txt {
    my ($f) = @_;
    open my $fh, '<', $f or die "Can't open $f for reading: $!";
    my $docid = docid($f);
    print <<'EOS';
!xapian {
title <S>
date <D>
filetype  <T>
extension <E>
}
EOS
    print "!doc \$$docid {\n";
    print '@extension = txt', "\n";
    print '@filetype = text/plain', "\n";
    while (<$fh>) {
        chomp;
        print '*:', $_, "\n";
    }
    print "}\n";
}

sub from_mp3 {
    my ($f) = @_;
    my %fmeta = %meta;
    my $d = dirname($f);
    print <<'EOS';
!xapian {
album     <S> <> %en
title     <S> <> %en @2
performer <A> <> @2
year      <Y>
filetype  <T>
extension <E>
}
EOS
    if (-e "$d/tags") {
        open my $fh, '<', "$d/tags";
        while (<$fh>) {
            next if !/^(\S+)\s+(.+)$/;
            $fmeta{$1} = $2;
        }
    }
    my $docid = docid($f);
    print "!doc \$$docid {\n";
    print '@', $_, ' : ', $fmeta{$_}, "\n" for sort keys %fmeta;
    print '@extension = mp3', "\n";
    print '@filetype = audio/mp3', "\n";
    if (-e "$d/lyrics") {
        open my $fh, '<', "$d/lyrics" or die;
        print ">lyrics\n";
        print '*:', $_ for <$fh>;
        print "<lyrics\n";
    }
    print "}\n";
}

sub docid {
    my ($f) = @_;
    $docid{$f} ||= ('dx' . ++$dx);
}

